{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TicketsService {\n  constructor(http) {\n    this.http = http;\n    //private baseUrl = 'http://localhost:3000/api/tickets';\n    this.baseUrl = 'https://ticketera-api.vercel.app/api/tickets';\n  }\n  traerTodos() {\n    return this.http.get(`${this.baseUrl}/`);\n  }\n  traerTicketsEq() {\n    return this.http.get(`${this.baseUrl}/eq`);\n  }\n  traerTicketsGt() {\n    return this.http.get(`${this.baseUrl}/gt`);\n  }\n  traerTicketsGte() {\n    return this.http.get(`${this.baseUrl}/gte`);\n  }\n  traerTicketsLt() {\n    return this.http.get(`${this.baseUrl}/lt`);\n  }\n  traerTicketsLte() {\n    return this.http.get(`${this.baseUrl}/lte`);\n  }\n  traerTicketsNe() {\n    return this.http.get(`${this.baseUrl}/ne`);\n  }\n  traerTicketsIn() {\n    return this.http.get(`${this.baseUrl}/in`);\n  }\n  traerTicketsNin() {\n    return this.http.get(`${this.baseUrl}/nin`);\n  }\n  traerTicketsOr() {\n    return this.http.get(`${this.baseUrl}/or`);\n  }\n  traerTicketsAnd() {\n    return this.http.get(`${this.baseUrl}/and`);\n  }\n  traerTicketsNor() {\n    return this.http.get(`${this.baseUrl}/nor`);\n  }\n  traerTicketsNot() {\n    return this.http.get(`${this.baseUrl}/not`);\n  }\n  traerTicketsNear() {\n    return this.http.get(`${this.baseUrl}/near`);\n  }\n  traerTicketsGeoWithin() {\n    return this.http.get(`${this.baseUrl}/geowithin`);\n  }\n  traerTicketsGeoIntersects() {\n    return this.http.get(`${this.baseUrl}/geointersects`);\n  }\n  //AGREGATION\n  traerTicketsText() {\n    return this.http.get(`${this.baseUrl}/text`);\n  }\n  traerTicketsExists() {\n    return this.http.get(`${this.baseUrl}/exists`);\n  }\n  traerTicketsAll() {\n    return this.http.get(`${this.baseUrl}/all`);\n  }\n  traerTicketsElemMatch() {\n    return this.http.get(`${this.baseUrl}/elemmatch`);\n  }\n  traerTicketsSize() {\n    return this.http.get(`${this.baseUrl}/size`);\n  }\n  traerClientesDesperfectos() {\n    return this.http.get(`${this.baseUrl}/desperfectos`);\n  }\n  traerResponsablesTickets() {\n    return this.http.get(`${this.baseUrl}/unwindgroup`);\n  }\n  traerTicketsEmpleados() {\n    return this.http.get(`${this.baseUrl}/lookup`);\n  }\n  static #_ = this.ɵfac = function TicketsService_Factory(t) {\n    return new (t || TicketsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketsService,\n    factory: TicketsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["TicketsService","constructor","http","traerTodos","get","baseUrl","traerTicketsEq","traerTicketsGt","traerTicketsGte","traerTicketsLt","traerTicketsLte","traerTicketsNe","traerTicketsIn","traerTicketsNin","traerTicketsOr","traerTicketsAnd","traerTicketsNor","traerTicketsNot","traerTicketsNear","traerTicketsGeoWithin","traerTicketsGeoIntersects","traerTicketsText","traerTicketsExists","traerTicketsAll","traerTicketsElemMatch","traerTicketsSize","traerClientesDesperfectos","traerResponsablesTickets","traerTicketsEmpleados","factory","providedIn"],"sourceRoot":"","sources":["D:\\Dowloads\\Ticketera-front-main\\Ticketera-front-main\\src\\app\\services\\tickets.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketsService {\n  //private baseUrl = 'http://localhost:3000/api/tickets';\n  private baseUrl = 'https://ticketera-api.vercel.app/api/tickets';\n\n  constructor(private http: HttpClient) { }\n\n  traerTodos(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/`);\n  }\n\n  traerTicketsEq(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/eq`);\n  }\n\n  traerTicketsGt(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/gt`);\n  }\n\n  traerTicketsGte(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/gte`);\n  }\n\n  traerTicketsLt(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/lt`);\n  }\n\n  traerTicketsLte(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/lte`);\n  }\n\n  traerTicketsNe(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/ne`);\n  }\n\n  traerTicketsIn(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/in`);\n  }\n  traerTicketsNin(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/nin`);\n  }\n\n  traerTicketsOr(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/or`);\n  }\n\n  traerTicketsAnd(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/and`);\n  }\n\n  traerTicketsNor(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/nor`);\n  }\n\n  traerTicketsNot(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/not`);\n  }\n\n  traerTicketsNear() {\n    return this.http.get(`${this.baseUrl}/near`);\n  }\n\n  traerTicketsGeoWithin() {\n    return this.http.get(`${this.baseUrl}/geowithin`);\n  }\n\n  traerTicketsGeoIntersects() {\n    return this.http.get(`${this.baseUrl}/geointersects`);\n  }\n\n  //AGREGATION\n  traerTicketsText() {\n    return this.http.get(`${this.baseUrl}/text`);\n  }\n\n  traerTicketsExists() {\n    return this.http.get(`${this.baseUrl}/exists`);\n  }\n\n  traerTicketsAll() {\n    return this.http.get(`${this.baseUrl}/all`);\n  }\n\n  traerTicketsElemMatch() {\n    return this.http.get(`${this.baseUrl}/elemmatch`);\n  }\n\n  traerTicketsSize() {\n    return this.http.get(`${this.baseUrl}/size`);\n  }\n\n  traerClientesDesperfectos() {\n    return this.http.get(`${this.baseUrl}/desperfectos`);\n  }\n\n  traerResponsablesTickets() {\n    return this.http.get(`${this.baseUrl}/unwindgroup`);\n  }\n\n  traerTicketsEmpleados() {\n    return this.http.get(`${this.baseUrl}/lookup`);\n  }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}